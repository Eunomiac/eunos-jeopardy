/**
 * Application TypeScript Configuration - React/Vite Source Code
 *
 * This configuration is specifically for the main application source code that
 * runs in the browser. It extends the base config and adds React-specific and
 * Vite bundler-specific settings needed for modern React development.
 *
 * **Purpose:**
 * - Type-check all React components, services, and application logic
 * - Enable React JSX transformation and DOM type definitions
 * - Configure Vite's bundler mode for optimal development experience
 * - Support TypeScript file imports with extensions (Vite feature)
 *
 * **Changes from Base Config:**
 * - Adds DOM and DOM.Iterable to lib for browser APIs (window, document, etc.)
 * - Enables JSX with react-jsx transform (modern React 17+ JSX)
 * - Sets useDefineForClassFields for standard ES2022 class field behavior
 * - Uses "bundler" module resolution (Vite-specific, more permissive than Node)
 * - Allows importing .ts/.tsx files with extensions (Vite handles this)
 * - Enables verbatimModuleSyntax for explicit import/export type safety
 *
 * **Why These Settings:**
 * - DOM types: Required for React components that interact with the browser
 * - react-jsx: Modern JSX transform without needing React in scope
 * - bundler resolution: Vite can resolve modules that Node.js can't
 * - allowImportingTsExtensions: Vite strips these at build time
 * - verbatimModuleSyntax: Ensures type-only imports are explicit
 *
 * **Includes:**
 * - src/: All application source code
 * - docs/types*.ts: Type definition documentation files
 *
 * **Used By:**
 * - Vite dev server and build process
 * - ESLint for type-aware linting
 * - IDE for IntelliSense and type checking
 */
{
  "extends": "./tsconfig.base.json",
  "compilerOptions": {
    /* Language and Environment */
    "lib": ["ES2023", "DOM", "DOM.Iterable"],
    "jsx": "react-jsx",
    "useDefineForClassFields": true,

    /* Modules */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "verbatimModuleSyntax": true,

    /* Emit */
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo"
  },
  "include": ["src", "docs/types-new.ts", "docs/types.ts"]
}
